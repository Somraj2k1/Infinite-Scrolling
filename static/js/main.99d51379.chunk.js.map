{"version":3,"sources":["components/App.jsx","index.js"],"names":["app","state","posts","loading","page","prevY","this","setState","axios","get","then","res","data","getPhotos","observer","IntersectionObserver","handleObserver","bind","root","rootMargin","threshold","observe","loadingRef","entities","y","boundingClientRect","curPage","length","albumId","loadingTextCSS","display","className","style","minHeight","margin","map","user","id","title","body","ref","height","width","Component","ReactDOM","render","App","document","getElementById"],"mappings":"iPAqFeA,E,kDAjFb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAO,GACPC,SAAS,EACTC,KAAM,EACNC,MAAO,GANG,E,6CAUd,SAAUD,GAAO,IAAD,OACdE,KAAKC,SAAS,CAAEJ,SAAS,IACzBK,IACGC,IADH,2DAEwDL,EAFxD,eAIGM,MAAK,SAACC,GACL,EAAKJ,SAAS,CAAEL,MAAM,GAAD,mBAAM,EAAKD,MAAMC,OAAjB,YAA0BS,EAAIC,SACnD,EAAKL,SAAS,CAAEJ,SAAS,S,+BAI/B,WACEG,KAAKO,UAAUP,KAAKL,MAAMG,MAQ1BE,KAAKQ,SAAW,IAAIC,qBAClBT,KAAKU,eAAeC,KAAKX,MAPb,CACZY,KAAM,KACNC,WAAY,MACZC,UAAW,IAObd,KAAKQ,SAASO,QAAQf,KAAKgB,c,4BAG7B,SAAeC,EAAUT,GACvB,IAAMU,EAAID,EAAS,GAAGE,mBAAmBD,EACzC,GAAIlB,KAAKL,MAAMI,MAAQmB,EAAG,CACxB,IACME,EADYpB,KAAKL,MAAMC,MAAMI,KAAKL,MAAMC,MAAMyB,OAAS,GACnCC,QAC1BtB,KAAKO,UAAUa,GACfpB,KAAKC,SAAS,CAAEH,KAAMsB,IAExBpB,KAAKC,SAAS,CAAEF,MAAOmB,M,oBAGzB,WAAU,IAAD,OASDK,EAAiB,CAAEC,QAASxB,KAAKL,MAAME,QAAU,QAAU,QACjE,OACE,yBAAK4B,UAAU,aACb,yBAAKC,MAAO,CAAEC,UAAW,QAASC,OAAQ,SACvC5B,KAAKL,MAAMC,MAAMiC,KAAI,SAACC,GAAD,OACrB,8BACC,2BAAG,iCAAQA,EAAKC,GAAb,MACH,yCAAeD,EAAKE,MAApB,KACA,2BAAG,wCAAcF,EAAKG,KAAnB,WAIP,yBACEC,IAAK,SAAClB,GAAD,OAAiB,EAAKA,WAAaA,GACxCU,MArBa,CACjBS,OAAQ,QACRC,MAAM,QACNR,OAAQ,SAoBJ,0BAAMF,MAAOH,GAAb,oB,GA3EQc,aCClBC,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.99d51379.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass app extends Component {\n  constructor() {\n    super();\n    this.state = {\n      posts: [],\n      loading: false,\n      page: 0,\n      prevY: 0\n    };\n  }\n\n  getPhotos(page) {\n    this.setState({ loading: true });\n    axios\n      .get(\n        `https://jsonplaceholder.typicode.com/posts?_page=${page}&_limit=10`\n      )\n      .then((res) => {\n        this.setState({ posts: [...this.state.posts,...res.data] });\n        this.setState({ loading: false });\n      });\n  }\n\n  componentDidMount() {\n    this.getPhotos(this.state.page);\n\n    var options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 1.0\n    };\n\n    this.observer = new IntersectionObserver(\n      this.handleObserver.bind(this),\n      options\n    );\n    this.observer.observe(this.loadingRef);\n  }\n\n  handleObserver(entities, observer) {\n    const y = entities[0].boundingClientRect.y;\n    if (this.state.prevY > y) {\n      const lastPhoto = this.state.posts[this.state.posts.length - 1];\n      const curPage = lastPhoto.albumId;\n      this.getPhotos(curPage);\n      this.setState({ page: curPage });\n    }\n    this.setState({ prevY: y });\n  }\n\n  render() {\n    // Additional css\n    const loadingCSS = {\n      height: \"200px\",\n      width:\"400px\",\n      margin: \"30px\"\n    };\n\n    // To change the loading icon behavior\n    const loadingTextCSS = { display: this.state.loading ? \"block\" : \"none\" };   \n    return (\n      <div className=\"container\">\n        <div style={{ minHeight: \"800px\", margin: \"20px\" }}>\n          {this.state.posts.map((user) => (\n           <view>\n            <p><new > {user.id}.</new></p>\n            <new> Title : {user.title}.</new>\n            <p><new> Body : {user.body}.</new></p>\n          </view>     \n          ))}          \n        </div>\n        <div\n          ref={(loadingRef) => (this.loadingRef = loadingRef)}\n          style={loadingCSS}\n        >\n          <span style={loadingTextCSS}>Loading...</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default app;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}